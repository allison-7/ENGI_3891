dd on to the Course class and create a Student class to go with it.

In last week’s assignment, you created an implementation for the Course class. This week, you must add an implementation for a new Student class and also modify the Course class in the following ways:

    add implementations for the number and level methods,
    add a Student parameter to the registerStudent method,
    ensure that seatsRemaining returns a negative number if enrolment exceeds capacity and
    implement the classList method.

My (clean) versions of the header files are here:

Notes
Getting started

You may find it helpful to start with your implementation from assignment 2 but my new Course.h header file to ensure that you get the new versions of all of the method declarations. You may find that you need to choose different field types to represent all of the information that a Course must store.
Backwards compatibility

As always, you can add whatever fields and methods you need to, but you cannot change or remove any fields or methods specified in the header files I provide. If the test code relies on, e.g., the existence of a capacity method, then you cannot remove the capacity method: that would break the test code. This principle (you can add things but not change or remove them) is called backwards compatiblity, and it is an important principle in practical software development.
Testing

As always, you are highly encouraged to test your own code. You can do this by writing your own test code or sharing test code with your peers. Some students have asked me, “how much testing is necessary?” My answer is that you should test until you are confident that your code works.
Submission

Submit all four files (Course.h, Course.cpp, Student.h and Student.cpp) to the assignments/3 directory of your personal folder in the Subversion repository. Please ensure that these files are both spelled with capital letters. If you submit with a lower-case name on Mac OS X or Windows and it won’t let you fix the spelling, you can fix things on the Lab or EN1040 computers.
